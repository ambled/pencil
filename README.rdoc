== SYNOPSIS

pencil: graphite dashboarding frontend

pencil is a monitoring frontend for graphite. It runs a webserver that dishes
out pretty graphite urls in hopefully interesting and intuitive layouts.

Some features are:

* Implicit collection of host and cluster data

  pencil picks these up from graphite without you having to explicitly define
  them. You need only supply the metrics; see SETUP for configuration details.

* Relative and absolute timespecs with auto-refresh

  Timeslices are measured in terms of a (possibly relative) starting time and a
  duration. Timespecs are parsed using the chronic[http://chronic.rubyforge.org/] and
  chronic_duration[https://github.com/hpoydar/chronic_duration] gems.

* permalinks

  Turn a relative timeslice (such as the last 8 hours) into an absolute one for
  placing in bug reports and all sorts of other useful things.

* Lots of navigation UI for bouncing around the different views

== INSTALL

Eventually it should just be:

gem install pencil

...but it isn't yet.

Dependencies are:

* rack
* sinatra
* json
* chronic
* chronic_duration
* (fixme versions)

== SETUP

You should have a working graphite installation, and your metrics currently
need to be of this form for for pencil to understand them:

_METRIC_._HOST_._CLUSTER_

where _METRIC_ =~ /([^\.]+\.)+/

You will also need to set up some YAML configuration files in order for pencil
to work. See examples/ for example configs. Here's an example pencil.yml (the
default name for the config file)

:config :
  :conf_dir : "."   # directory, relative to this file, with yml files to load
  :graphite_url : graphite URI
  :url_opts :
    :width : 1000
    :height : 400
    :fontSize : 15
    :start : "8 hours ago"  # in chronic timespec format
    :template : "noc"
    :yMin : 0
    :margin : 5
    :thickness : 2

    :refresh_rate : 60        # how often to refresh the view
    :host_sort : "numeric"    # add this if you want to sort hosts numerically
    :quantum : 30             # map requests to 30 second intervals
    :date_format : "%X %x"    # strftime

All configuration can go in pencil.yml, but if you specify a :conf_dir under
:config, all YAML files in that directory will also be loaded. You can use this
to put dashboards and graphs in separate files (this is how the example configs
are set up)

The important top-level configuration keys are:

* :config: general config options, as above
* :graphs: see below
* :dashboards: see below

A graph is a name, title, collection of metrics, and some other options. A
metric is the full graphite metric sans the HOST.CLUSTER suffix. It looks like
(in YAML):

  graph_name:             # name pencil references this graph by
    title: "graph_title"  # title displayed on graph
    metrics:              # list of graphite metrics
      metric.1:
        :key : key         # key displayed on the legend for this metric
        :color : color     # color on the graph for this metric
      metric.2:
        :key : key
        :color : color
      [...]
    stack: true           # whether to stack or not
    hosts: ["hosts1*", "test*_web", "hosts2*"] # filter on hosts

Similarly, a dashboard is a name, title, collection of graphs, and some other
options. It looks like (in YAML):

  dash_name:
    title: dash_title
    graphs:
      - graph1:
        hosts: ["sync*_web"] # additional hosts filter specific to this graph
        other_opt: val       # possibly other options in the future
      - graph2:
      [...]
    hosts: ["filter1*", "*filter2"]

== RUNNING THE SERVER
Once you've set up the configs, you should be able to just run

pencil

and get something up on localhost:4567

From there you should be able to click around and see various interesting
collections of graphs.

With no options, pencil looks for ./pencil.yml as the default config file.

You can bind to a specific port with -p PORT and load a specific config file
with -f FILE. Other rack-related options will be added at some point in the
future.
